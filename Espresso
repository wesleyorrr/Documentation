 Espresso
A API do Espresso incentiva os autores de testes a pensar o que o usuário pode fazer enquanto interage com o aplicativo, localizando elementos de UI e interagindo com eles. Ao mesmo tempo, o framework evita o acesso direto às atividades e visualizações do app, porque a retenção desses objetos e a operação deles fora da linha de execução de IU é uma das principais fontes de falhas nos testes. Portanto, você não verá métodos como getView() e getCurrentActivity() na API do Espresso. Você ainda pode trabalhar com segurança em visualizações, implementando suas próprias subclasses de ViewAction e ViewAssertion.
Componentes da API

Os principais componentes do Espresso incluem:

    Espresso: ponto de entrada para interações com visualizações (via onView() e onData()). Também expõe APIs que não estão necessariamente vinculadas a nenhuma visualização, como pressBack().
    ViewMatchers: um conjunto de objetos que implementam a interface Matcher<? super View>. Você pode transmitir um ou mais deles ao método onView() para localizar uma visualização na hierarquia atual.
    ViewActions: um conjunto de objetos ViewAction que podem ser transmitidos para o método ViewInteraction.perform(), como click().
    ViewAssertions: um conjunto de objetos ViewAssertion que podem ser transmitidos ao método ViewInteraction.check(). Na maioria das vezes, você usará a declaração de correspondências, que usa um matcher de visualização para declarar o estado da visualização selecionada no momento.
